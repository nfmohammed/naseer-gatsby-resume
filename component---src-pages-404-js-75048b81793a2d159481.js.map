{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/seo.js","webpack:///./src/components/resume-contact.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","a","createElement","title","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","breakpoints","createBreakpoints","useStyles","makeStyles","theme","_buttonStyle","root","maxWidth","buttonStyle","padding","icons","mail","react_default","Mail_default","github","GitHub_default","linkedin","LinkedIn_default","twitter","Twitter_default","ResumeContact","classes","_1887432444","className","allContactJson","edges","map","s","Link","href","underline","rel","target","color","IconButton","Badge","type","flexGrow","headerStyle","margin","Header","siteTitle","AppBar","position","Toolbar","Typography","variant","noWrap","header","layoutStyle","children","_856328897"],"mappings":"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","file":"component---src-pages-404-js-75048b81793a2d159481.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from '@material-ui/core';\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport MailIcon from '@material-ui/icons/Mail';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport createBreakpoints from \"@material-ui/core/styles/createBreakpoints\";\n\nconst breakpoints = createBreakpoints({});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 360,\n  },\n  buttonStyle: {\n    padding: `0.5rem`,\n    [breakpoints.up(\"md\")]: {\n      padding: `1.0rem`\n    }\n  }\n}));\n\nconst icons = {\n  \"mail\": <MailIcon />,\n  \"github\": <GitHubIcon />,\n  \"linkedin\": <LinkedInIcon />,\n  \"twitter\": <TwitterIcon />\n}\n\nexport default function ResumeContact() {\n  const classes = useStyles();\n\n  const data = useStaticQuery(graphql`\n    query {\n      allContactJson {\n        edges {\n          node {\n            id\n            type\n            value\n            href\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <div className={classes.root}>\n      {data.allContactJson.edges.map(s => (\n        <Link href={s.node.href} underline=\"hover\" rel=\"noopener noreferrer\" target=\"_blank\" color=\"inherit\">\n          <IconButton color=\"inherit\" className={classes.buttonStyle}>\n            <Badge color=\"secondary\">\n              {icons[s.node.type]}\n            </Badge>\n          </IconButton>\n        </Link>\n      ))}\n    </div>\n  );\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport ResumeContact from './resume-contact';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  headerStyle: {\n    margin: `0 auto`,\n    maxWidth: 960,\n    padding: `0rem 1.0875rem 1.0875rem`\n  }\n}));\n\nconst Header = ({ siteTitle }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.headerStyle}>\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography className={classes.title} variant=\"h6\" noWrap>\n          {siteTitle}\n        </Typography>\n        <ResumeContact />\n      </Toolbar>\n    </AppBar>\n    </div>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst useStyles = makeStyles(theme => ({\n  layoutStyle: {\n    margin: `0 auto`,\n    maxWidth: 960,\n    padding: `1.45rem 1.0875rem`\n  }\n}));\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n  const classes = useStyles();\n  return (\n    \n    <div className={classes.layoutStyle}>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <main>{children}</main>\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}